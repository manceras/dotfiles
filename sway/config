### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term kitty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu ~/.config/rofi/scripts/launcher_t3

# Define colors variables:
set $background          #24273A
set $background-alt      #6E738D
set $foreground          #CAD3F5
set $primary             #8AADF4
set $secondary           #A6DA95
set $alert               #ED8796
set $disabled            #24273A

### Colors
#
# define colors for windows:
#class 				                  border		      bground		      text		        indicator       child_border
client.focused		   	          $primary	      $primary        $foreground	    $primary        $primary
client.unfocused	    	        $disabled	      $background-alt	$foreground		  $disabled    		$disabled
client.focused_inactive	    	  $disabled	      $background-alt	$foreground		  $disabled		    $disabled
client.urgent                   $alert          $alert          $foreground		  $alert	        $alert

### General configuration
# Change window border thickness and remove title bar
default_border pixel 3
gaps outer 4
gaps inner 8
# smart_gaps on
# smart_borders on

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/.wallpapers/peak.jpg fill
#
# Example configuration:
#
output HDMI-A-1 resolution 1920x1080 position 1920,1080 transform 180
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# Screenshots
bindsym Print exec grim ~/Pictures/Screenshots/"$(date +'%s_grim.png')" && notify-send -i ~/Pictures/Screenshots/"$(date +'%s_grim.png')" "Screenshot taken" "Stored in ~/Pictures/Screenshots"
bindsym Shift+Print exec grim -g "$(slurp)" ~/Pictures/Screenshots/"$(date +'%s_grim.png')" && notify-send -i ~/Pictures/Screenshots/"$(date +'%s_grim.png')" "Screenshot taken" "Stored in ~/Pictures/Screenshots"
bindsym $mod+Shift+Print exec grim -g "$(slurp)" - | wl-copy

# Show images
bindsym $mod+Alt+h exec imv ~/Pictures/Horario.png

### Idle configuration

# exec_always swayidle -w \
#          timeout 300 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          timeout 400 'swaylock -f -i ~/.wallpapers/nord-lake.png' \
#          before-sleep 'swaylock -f -i ~/.wallpapers/nord-lake.png && pamixer -m && playerctl -a pause'

# This will turn off your displays after 300 seconds of inactivity, then lock
# your creen after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen and mute your aundio before your
# computer goes to sleep.

### Input configuration
#
# Example configuration:

input "10182:480:GXTP7863:00_27C6:01E0_Touchpad" {
    dwt disabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

input type:keyboard {
    xkb_layout eu,es
    xkb_options grp:win_space_toggle
    repeat_rate 150

}



### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Set some apps to opening in floating by default:
    for_window [app_id="pavucontrol"] floating enable
    for_window [app_id="blueberry"] floating enable
    for_window [app_id="imv"] floating enable

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Power menu
    bindsym $mod+Shift+e exec ~/.config/rofi/scripts/powermenu_t2

    # Calculator with rofi
    bindsym $mod+c exec ~/.config/rofi/scripts/calc
#
# Opening apps:
#
    bindsym $mod+w exec firefox
    bindsym $mod+n exec kitty nnn -e

#
# Volume keys
#
    bindsym XF86AudioRaiseVolume  exec /home/antoniom/.scripts/volume-up
    bindsym XF86AudioLowerVolume  exec /home/antoniom/.scripts/volume-down
    bindsym XF86AudioMute         exec /home/antoniom/.scripts/mute

#
# Brightness control
#
    bindsym XF86MonBrightnessDown   exec /home/antoniom/.scripts/brightness-down
    bindsym XF86MonBrightnessUp     exec /home/antoniom/.scripts/brightness-up

#
# Multimedia control
#
bindsym XF86AudioPlay       exec playerctl play
bindsym XF86AudioPause      exec playerctl pause
bindsym $mod+Alt+Down       exec playerctl play-pause
bindsym XF86AudioNext       exec playerctl next
bindsym $mod+Alt+Right      exec playerctl next
bindsym $mod+Alt+Left       exec playerctl previous

# Moving around:
#
bindsym {
    # Move your focus around
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    $mod+Left focus left
    $mod+Down focus down
    $mod+Up focus up
    $mod+Right focus right

    # Move the focused window with the same, but add Shift
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
    # Ditto, with arrow keys
    $mod+Shift+Left move left
    $mod+Shift+Down move down
    $mod+Shift+Up move up
    $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    $mod+1 workspace number 1
    $mod+2 workspace number 2
    $mod+3 workspace number 3
    $mod+4 workspace number 4
    $mod+5 workspace number 5
    $mod+6 workspace number 6
    $mod+7 workspace number 7
    $mod+8 workspace number 8
    $mod+9 workspace number 9
    $mod+0 workspace number 10
    # Move focused container to workspace
    $mod+Shift+1 move container to workspace number 1
    $mod+Shift+2 move container to workspace number 2
    $mod+Shift+3 move container to workspace number 3
    $mod+Shift+4 move container to workspace number 4
    $mod+Shift+5 move container to workspace number 5
    $mod+Shift+6 move container to workspace number 6
    $mod+Shift+7 move container to workspace number 7
    $mod+Shift+8 move container to workspace number 8
    $mod+Shift+9 move container to workspace number 9
    $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
}

set $left_monitor HDMI-A-1
set $right_monitor eDP-1

workspace 1 output $left_monitor $right_monitor
workspace 2 output $left_monitor $right_monitor
workspace 3 output $left_monitor $right_monitor
workspace 4 output $left_monitor $right_monitor
workspace 5 output $left_monitor $right_monitor
workspace 6 output $right_monitor $left_monitor
workspace 7 output $right_monitor $left_monitor
workspace 8 output $right_monitor $left_monitor
workspace 9 output $right_monitor $left_monitor
workspace 10 output $right_monitor $left_monitor

assign [class="Spotify"] workspace number 10


#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
	swaybar_command waybar
}

set $ctp-version v0.6.1
exec_always if [ ! -e ~/.themes/Catppuccin-Frappe-Standard-Lavender-dark ]; then \
  mkdir -p ~/.themes \
  && curl -L https://github.com/catppuccin/gtk/releases/download/$ctp-version/Catppuccin-Frappe-Standard-Lavender-dark.zip -o ~/.themes/catppuccin.zip \
  && unzip ~/.themes/catppuccin.zip -d ~/.themes/ \
  && rm -rf ~/.themes/catppuccin.zip; fi
# Autotiling script
exec autotiling-rs

exec ~/.scripts/xdg_desktop_change


include /etc/sway/config.d/*



# exec rclone mount amanceragamezDrive: ~/Drive/

exec lxpolkit
